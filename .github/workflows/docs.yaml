name: Documents CI
on:
  push:
    branches: [ dev ]
  pull_request:

defaults:
  run:
    working-directory: docs

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install dependencies
        run: |
          gem install asciidoctor
          gem install asciidoctor-pdf
          gem install asciidoctor-diagram

      - name: Build files
        run: cd src && make
      - name: Line endings check
        run: git grep -n --color $'\n' -- "*.adoc" && echo "^ Possible Windows style line ending detected. Please use Unix style line endings (\n)." && exit 0 || true
      - name: Find trailing spaces
        run: git grep -n --color ' $' -- "*.adoc" && echo "^ Trailing space detected at end of line. Please remove." && exit 0 || true
      - name: Check for tabs
        run: git grep  -n --color  $'\t' -- "*.adoc" && echo "^ Use of tabs detected. Please use space for indentation." && exit 0 || true
      - name: Multiple blank lines
        run: git grep "" -- "*.adoc" | uniq -c | grep -1 "^      [2-9] " | cut -b9- | sed 's/:$/:[more-than-one-blank-line-here-please-remove]/' | grep ":" && echo "^ Multiple blank lines detected. Please use only one blank line between paragraphs." && exit 0 || true
      - name: File should end with new line
        run: for FILE in $(git ls-files -- "*.adoc"); do if [[ $(tail -c1 $FILE) != "" ]]; then echo "File ${FILE} does not end with a newline character (\n)."; exit 0; fi; done
      - name: Max line width
        run: git grep -n --color '.\{120\}' -- "*.adoc" && echo "^ Lines should not be longer than 120 characters" && exit 0 || true
